//I will override the address output 
import java.util.*;
public class Userp1
{
	private String fN;
	public String lN;
	
	static void log(Object o)
	{
   		System.out.print(o);
	}

	static void logln(Object o)
	{
		System.out.println(o);
	}



	public String getFullName()
	{
		return getFirstName() + " "  + lN.toUpperCase();
	}

	public String output()
	{
		return "Hi, my name is "+ getFirstName() + " "  + getLastName() + ".";
	}
	
	//Now I will overload output
	public String output(boolean nice)
	{
		if(nice)
		{
			return "You\'re an awesome person"+ " "  + getFullName() + ".";

		}
		return "You\'re an idiot"+ " "  + getFullName() + ".";
	}
	
	public String getFirstName()
	{
		return fN;
	}

	//Setter not returning anything ∴ void
	public void setFirstName(String firstName)
	{
		//Assigning the fName value we pass in to the field firstName
		fN=firstName.trim();
		//the .strip remove any whitespaces before output.
		
	}

	public String getLastName()
	{
		return lN;
	}

	//Setter not returning anything ∴ void
	public void setLastName(String lastName)
	{
		//Assigning the lN value we pass in to the field lastName
		lN=lastName;
	}
	

	public static void printUsers(List<User> users)
	{
		//I want to iterate through the users
		//For each User o in users)
		for(User o:users)
		{
			logln(o.getFullName());
		}
	}

	public static int searchList(List<User> users, String fN, String lN)
	{
		return searchList(users, fN + " "  + lN);
	}

	//OVERLOAD
	public static int searchList(List<User> users, String fullName)
	{
		//iterate through the list
		for(int i=0;i<users.size();i++)
		{
			//Use .equals instead of ==
			if(users.get(i).getFullName().equals(fullName))
			{
				return i;
			}
		}

		//if no match
		return -1;
	}


    //Now I will override the ToString
    @Override
    public String toString()
	{
		//To override remember to give the method to override the same name
		return "  " + getFullName() + "]";
	}

}
